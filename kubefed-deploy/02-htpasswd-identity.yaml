---
- name: "Add htpasswd OAuth identity provider to OCP"
  hosts: localhost
  gather_facts: no

  vars:
    bob: leponge
    ocp:
      admin:
        username: xymox
        password: bobleponge
    htpasswd:
      file: ./ocp-htpasswd2
      secret:
        name: htpass-secret
    ocp:
      context: admin

  tasks:
    - name: Create htpasswd file
      htpasswd:
        path: "{{ htpasswd.file|default('htpasswd') }}"
        name: "{{ ocp.admin.username|default('xymox') }}"
        password: "{{ ocp.admin.password|default('zboubiblo') }}"
        mode: 0640
    
    - name: Create HTPasswd secret
      k8s:
        kubeconfig: "{{ kube.config.path }}"
        state: present
        context: "{{ item.name|default('default') }}"
        definition:
          apiVersion: v1
          data:
            htpasswd: "{{ lookup('file', htpasswd.file|default('htpasswd')) | b64encode }}"
          kind: Secret
          metadata:
            name: "{{ htpasswd.secret.name|default('htpass-secret') }}"
            namespace: openshift-config
          type: Opaque
      loop: "{{ cluster2 }}"

    - name: Create CR for HTPasswd Identity provider
      k8s:
        kubeconfig: "{{ kube.config.path }}"
        state: present
        context: "{{ item.name|default('default') }}"
        definition:
          apiVersion: config.openshift.io/v1
          kind: OAuth
          metadata:
            name: cluster
          spec:
            identityProviders:
            - name: cluster_htpasswd_provider
              mappingMethod: claim
              type: HTPasswd
              htpasswd:
                fileData:
                  name: "{{ htpasswd.secret.name|default('htpass-secret') }}"
      loop: "{{ cluster2 }}"

    - name: Add role cluster-admin to {{ ocp.admin.username|default('xymox') }}
      command: "oc --context={{ item.name }} adm policy add-cluster-role-to-user cluster-admin {{ ocp.admin.username|default('xymox') }}"
      args:
        chdir: "{{ '~/bin' | expanduser }}"
      environment:
        KUBECONFIG: "{{ kube.config.path }}"
      loop: "{{ cluster2 }}"

    - name: Remove default kubeadmin user
      command: "echo oc --context={{ item.name }} delete secrets kubeadmin -n kube-system"
      args:
        chdir: "{{ '~/bin' | expanduser }}"
      environment:
        KUBECONFIG: "{{ kube.config.path }}"
      loop: "{{ cluster2 }}"
